class Solution {
    public boolean isPossible(int[] arr, int m, int k,int mid) {
        int c=0;
        int a=0;
        for(int i=0;i<arr.length;i++){
            if(arr[i]<=mid){
                a++;
                
            }
            else {
                a=0;
            }

            if(a==k){
                c++;
                a=0;
            }
             if(c>=m){
            return true;
        }
        }
        return false;
       
    }
    public int minDays(int[] bloomDay, int m, int k) {
         if ((long) m * k > bloomDay.length) {
            return -1;
        }
        int l=Integer.MAX_VALUE,h=0;
        for(int i=0;i<bloomDay.length;i++){
            l=Math.min(l,bloomDay[i]);
            h=Math.max(h,bloomDay[i]);
        }
        int ans=-1;
        while(l<=h){
            int mid=l+(h-l)/2;
            if(isPossible(bloomDay,m,k,mid)){
                ans=mid;
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;
    }
}